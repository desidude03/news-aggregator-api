openapi: 3.0.3
info:
  title: 'News Api Docs'
  description: 'news aggregator API'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/articles:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: per_page
          description: 'The number of results per page. Defaults to 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The number of results per page. Defaults to 10.'
            example: 10
            nullable: false
        -
          in: query
          name: page
          description: 'The page number. Defaults to 1.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The page number. Defaults to 1.'
            example: 1
            nullable: false
        -
          in: query
          name: keyword
          description: 'Search keyword for title or content.'
          example: Sport
          required: false
          schema:
            type: string
            description: 'Search keyword for title or content.'
            example: Sport
            nullable: false
        -
          in: query
          name: start_date
          description: 'The start date for filtering articles. Format: YYYY-MM-DD.'
          example: '2024-01-01'
          required: false
          schema:
            type: string
            description: 'The start date for filtering articles. Format: YYYY-MM-DD.'
            example: '2024-01-01'
            nullable: false
        -
          in: query
          name: end_date
          description: 'The end date for filtering articles. Format: YYYY-MM-DD.'
          example: '2024-12-31'
          required: false
          schema:
            type: string
            description: 'The end date for filtering articles. Format: YYYY-MM-DD.'
            example: '2024-12-31'
            nullable: false
        -
          in: query
          name: category
          description: 'The category name to filter articles by.'
          example: Technology
          required: false
          schema:
            type: string
            description: 'The category name to filter articles by.'
            example: Technology
            nullable: false
        -
          in: query
          name: source
          description: 'The source name to filter articles by.'
          example: TechCrunch
          required: false
          schema:
            type: string
            description: 'The source name to filter articles by.'
            example: TechCrunch
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: 'Article Title'
                      content: 'Article content here.'
                      published_at: '2024-01-01T00:00:00Z'
                      source_name: TechCrunch
                      category:
                        name: Technology
                  meta:
                    total: 100
                    per_page: 10
                    current_page: 1
                    last_page: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Article Title'
                        content: 'Article content here.'
                        published_at: '2024-01-01T00:00:00Z'
                        source_name: TechCrunch
                        category:
                          name: Technology
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Article Title'
                        content:
                          type: string
                          example: 'Article content here.'
                        published_at:
                          type: string
                          example: '2024-01-01T00:00:00Z'
                        source_name:
                          type: string
                          example: TechCrunch
                        category:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Technology
                  meta:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 100
                      per_page:
                        type: integer
                        example: 10
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
      tags:
        - Articles
      security: []
  '/api/articles/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Article Title'
                  content: 'Article content here.'
                  published_at: '2024-01-01T00:00:00Z'
                  source_name: TechCrunch
                  category:
                    name: Technology
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Article Title'
                  content:
                    type: string
                    example: 'Article content here.'
                  published_at:
                    type: string
                    example: '2024-01-01T00:00:00Z'
                  source_name:
                    type: string
                    example: TechCrunch
                  category:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Technology
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Resource not found'
                properties:
                  message:
                    type: string
                    example: 'Resource not found'
      tags:
        - Articles
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the article.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 1
  /api/auth/token:
    post:
      summary: 'Generate an authentication token.'
      operationId: generateAnAuthenticationToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                properties:
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The provided credentials are incorrect.'
                  errors:
                    email:
                      - 'The provided credentials are incorrect.'
                properties:
                  message:
                    type: string
                    example: 'The provided credentials are incorrect.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The provided credentials are incorrect.'
                        items:
                          type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: 'Register a new user.'
      operationId: registerANewUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User registered successfully'
                properties:
                  message:
                    type: string
                    example: 'User registered successfully'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The full name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user. Must be unique.'
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password for the user. Must be at least 8 characters.'
                  example: password123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The password confirmation. Must match the password.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/forgot-password:
    post:
      summary: "Send a password reset link to the user's email."
      operationId: sendAPasswordResetLinkToTheUsersEmail
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset link sent to your email.'
                properties:
                  message:
                    type: string
                    example: 'Password reset link sent to your email.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Failed to send password reset link.'
                properties:
                  message:
                    type: string
                    example: 'Failed to send password reset link.'
      tags:
        - 'Password Reset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john.doe@example.com
                  nullable: false
              required:
                - email
      security: []
  /api/reset-password:
    post:
      summary: "Reset the user's password."
      operationId: resetTheUsersPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset successfully.'
                properties:
                  message:
                    type: string
                    example: 'Password reset successfully.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset failed.'
                properties:
                  message:
                    type: string
                    example: 'Password reset failed.'
      tags:
        - 'Password Reset'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The password reset token.'
                  example: aBcDeFg12345
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The new password for the user. Must be at least 8 characters.'
                  example: newpassword123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The password confirmation. Must match the password.'
                  example: newpassword123
                  nullable: false
              required:
                - token
                - email
                - password
                - password_confirmation
      security: []
  /api/users/feed:
    get:
      summary: 'Get the personalized feed of articles based on user preferences.'
      operationId: getThePersonalizedFeedOfArticlesBasedOnUserPreferences
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: 'Article Title'
                      content: 'Article content here.'
                      published_at: '2024-01-01T00:00:00Z'
                      source_name: TechCrunch
                      category:
                        name: Technology
                      author:
                        name: 'John Doe'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Article Title'
                        content: 'Article content here.'
                        published_at: '2024-01-01T00:00:00Z'
                        source_name: TechCrunch
                        category:
                          name: Technology
                        author:
                          name: 'John Doe'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Article Title'
                        content:
                          type: string
                          example: 'Article content here.'
                        published_at:
                          type: string
                          example: '2024-01-01T00:00:00Z'
                        source_name:
                          type: string
                          example: TechCrunch
                        category:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Technology
                        author:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'John Doe'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No personalized feed available'
                properties:
                  message:
                    type: string
                    example: 'No personalized feed available'
      tags:
        - 'Personalized Feed'
      security: []
  /api/users/preferences:
    post:
      summary: 'Set user preferences for sources, categories, and authors.'
      operationId: setUserPreferencesForSourcesCategoriesAndAuthors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Preferences updated successfully'
                properties:
                  message:
                    type: string
                    example: 'Preferences updated successfully'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The sources field must be an array.'
                  errors:
                    sources:
                      - 'The sources field must be an array.'
                properties:
                  message:
                    type: string
                    example: 'The sources field must be an array.'
                  errors:
                    type: object
                    properties:
                      sources:
                        type: array
                        example:
                          - 'The sources field must be an array.'
                        items:
                          type: string
      tags:
        - 'User Preferences'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sources:
                  type: 'string[]|null'
                  description: 'The list of preferred sources. Must be an array.'
                  example: '["TechCrunch", "Wired"]'
                  nullable: true
                categories:
                  type: 'string[]|null'
                  description: 'The list of preferred categories. Must be an array.'
                  example: '["Technology", "Science"]'
                  nullable: true
                authors:
                  type: 'string[]|null'
                  description: 'The list of preferred authors. Must be an array.'
                  example: '["John Doe", "Jane Smith"]'
                  nullable: true
      security: []
    get:
      summary: 'Get the current user preferences.'
      operationId: getTheCurrentUserPreferences
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  sources:
                    - TechCrunch
                    - Wired
                  categories:
                    - Technology
                    - Science
                  authors:
                    - 'John Doe'
                    - 'Jane Smith'
                properties:
                  sources:
                    type: array
                    example:
                      - TechCrunch
                      - Wired
                    items:
                      type: string
                  categories:
                    type: array
                    example:
                      - Technology
                      - Science
                    items:
                      type: string
                  authors:
                    type: array
                    example:
                      - 'John Doe'
                      - 'Jane Smith'
                    items:
                      type: string
      tags:
        - 'User Preferences'
      security: []
tags:
  -
    name: Articles
    description: ''
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Password Reset'
    description: ''
  -
    name: 'Personalized Feed'
    description: ''
  -
    name: 'User Preferences'
    description: ''
