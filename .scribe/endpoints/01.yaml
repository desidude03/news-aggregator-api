name: 'Password Reset'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: 'Password Reset'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Send a password reset link to the user's email."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password reset link sent to your email."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Failed to send password reset link."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: 'Password Reset'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Reset the user's password."
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The password reset token.'
        required: true
        example: aBcDeFg12345
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The new password for the user. Must be at least 8 characters.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation. Must match the password.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      token: aBcDeFg12345
      email: john.doe@example.com
      password: newpassword123
      password_confirmation: newpassword123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password reset successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Password reset failed."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
